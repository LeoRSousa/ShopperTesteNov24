services:
  postgres:
    image: postgres:17
    container_name: postgresdb
    environment:
      POSTGRES_USER: "teste"
      POSTGRES_PASSWORD: "teste123"
      POSTGRES_DB: "mydb"
    ports:
      - "15432:5432"
    volumes:
      - ./postgres-volume:/var/lib/postgresql/data
    networks:
      - shopperteste-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadminweb
    environment:
      PGADMIN_DEFAULT_EMAIL: "teste@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "teste123"
    ports:
      - "6543:80"
    depends_on:
      - postgres
    networks:
      - shopperteste-network

  backend:
    image: node:20
    container_name: backend
    working_dir: /usr/src/app
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000"
    environment:
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "teste"
      POSTGRES_PASSWORD: "senha_teste"
      POSTGRES_DB: "mydb"
    command: sh -c "npm install && npm start"
    develop:
      watch:
        - path: ./backend/package.json
          action: rebuild
        - path: ./app
          target: /usr/src/app
          action: sync
    depends_on:
      - postgres
    networks:
      - shopperteste-network

  frontend:
    # image: node:20
    container_name: frontend
    # working_dir: /usr/src/app
    build: 
      context: ./frontend
    depends_on:
      - backend
    environment:
      NODE_ENV: production
    ports:
      - "80:3000"
    # volumes:
    #   - ./frontend:/usr/src/app
    #   - ./frontend:/usr/src/app/node_modules
    develop:
      watch:
        - path: ./frontend/package.json
          action: rebuild
    command: sh -c "npm install && npm start"
    networks:
      - shopperteste-network

networks:
  shopperteste-network:
    driver: bridge